# Default values for hangar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

base:
  host: "https://hangar.test"
  authHost: "https://auth.hangar.test"
  sso:
    clientId: "my-client"
    apiKey: "some-id"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: hangar.test
  tls:
   - secretName: hangar-tls
     hosts:
       - hangar.test
  paths:
    - path: /
      pathType: ImplementationSpecific
      target: frontend
    - path: /api/
      pathType: ImplementationSpecific
      target: backend
    - path: /signup
      pathType: ImplementationSpecific
      target: backend
    - path: /login
      pathType: ImplementationSpecific
      target: backend
    - path: /logout
      pathType: ImplementationSpecific
      target: backend
    - path: /handle-logout
      pathType: ImplementationSpecific
      target: backend
    - path: /refresh
      pathType: ImplementationSpecific
      target: backend
    - path: /invalidate
      pathType: ImplementationSpecific
      target: backend
    - path: /v3/api-docs
      pathType: ImplementationSpecific
      target: backend
    - path: /robots.txt
      pathType: ImplementationSpecific
      target: backend
    - path: /sitemap.xml
      pathType: ImplementationSpecific
      target: backend
    - path: /global-sitemap.xml
      pathType: ImplementationSpecific
      target: backend

frontend:
  replicaCount: 1

  image:
    repository: ghcr.io/hangarmc/hangar/frontend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 3000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    configEnv: "hangar.test"
    backendHost: "http://hangar-backend:8080"

backend:
  replicaCount: 1

  image:
    repository: ghcr.io/hangarmc/hangar/backend
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 8080

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    postgresql:
      hostname: "hangarauth-postgresql"
      port: 5432
      username: "hangarauth"
      password: "hangarauth"
      database: "hangarauth"
      options: "?currentSchema=hangar"
    tokenSecret: "secret"
    kratosApiKey: "hookapikey-changeme"
    backendOauthUrl: "http://hangarauth-hydra:4444"
    backendAuthHost: "http://hangarauth-backend:8080"
    storage:
      type: "local"
      accessKey: "todo"
      secretKey: "todo"
      bucket: "todo"
      objectStorageEndpoint: "http://localhost:9000"
      cdnEndpoint: ""
      cdnIncludeBucket: true
    announcement: "This is a staging server for testing purposes. Data could be deleted at any time. That said, signups are open, please test stuff and report and feedback on github or discord!"
    zipkinEndpoint: "http://hangar-zipkin:9411/api/v2/spans"

zipkin:
  image:
    repository:  ghcr.io/openzipkin/zipkin
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    host: hangar.test
    tls:
      - secretName: hangar-tls
        hosts:
          - hangar.test
    paths:
      - path: /zipkin
        pathType: ImplementationSpecific

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 1000
    runAsNonRoot: true
    runAsUser: 1000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  service:
    type: ClusterIP
    port: 9411

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  config:
    test: "TEST"
